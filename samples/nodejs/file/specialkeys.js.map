{"version":3,"sources":["specialkeys.es6"],"names":[],"mappings":"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","file":"specialkeys.js","sourcesContent":["let rd = require('rd'),\r\n\t\tfs = require('fs'),\r\n\t\tkeyArrays = [],\r\n\t\tnotFoundKeyData = '',\r\n\t\tcommonPath = 'D:\\\\Workspace\\\\Projects-IPTV5(SH)\\\\iptv5\\\\app\\\\src\\\\resources\\\\',\r\n\t\tuserKeys = getFileContentDirectory(fs, commonPath + \"app\\\\\", \"user.properties\"),\r\n\t\tprojects = getDirectoryList(commonPath).dirNames,\r\n\t\tprojectsKeyObject = {};\r\n\r\nfor (let project of projects)\r\n{\r\n\tprojectsKeyObject[project] = getFileContentDirectory(fs, commonPath + project + '\\\\', \"user.properties\");\r\n}\r\n\r\nrd.read(__dirname + '/', function (err, files) {\r\n\tif (err) throw err;\r\n\r\n\tfiles.filter(fileItem => {\r\n\t\tconsole.log(fileItem);\r\n\t\treturn fileItem.includes('.jsp');\r\n\t}).forEach(function (fileItem) {\r\n\t\tlet fileContentString = fs.readFileSync(fileItem, \"utf-8\").toString(),\r\n\t\t\t\tspecialKeyCount = 0,\r\n\t\t\t\tfileKeyStrings = [''];\r\n\t\tfileKeyStrings.index = 0;\r\n\r\n\t\twhile (fileKeyStrings && \"length\" in fileKeyStrings)\r\n\t\t{\r\n\t\t\tfileContentString = fileContentString.slice(fileKeyStrings[0].length + fileKeyStrings.index);\r\n\t\t\tfileKeyStrings = new RegExp('key=\".*?\"', \"g\").exec(fileContentString);\r\n\t\t\tif (fileKeyStrings && \"length\" in fileKeyStrings)\r\n\t\t\t{\r\n\t\t\t\tlet keyString = fileKeyStrings[0].split('\"')[1];\r\n\t\t\t\tif (keyArrays.indexOf(keyString) === -1 && !userKeys.hasOwnProperty(keyString))\r\n\t\t\t\t{\r\n\t\t\t\t\tkeyArrays[keyArrays.length] = keyString;\r\n\t\t\t\t\tspecialKeyCount++;\r\n\t\t\t\t\tif (specialKeyCount === 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnotFoundKeyData += '\\n\\n\\n' + fileItem;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (let project of projects)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (projectsKeyObject[project].hasOwnProperty(keyString))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnotFoundKeyData += '\\n' + `########### ${project} ###########: ${keyString}=${projectsKeyObject[project][keyString]}`;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnotFoundKeyData += '\\n' + keyString;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\t// console.log(keyArrays);\r\n\twriteDataToFile(fs, __dirname + '\\\\', 'notfoundkeydetail.txt', notFoundKeyData);\r\n});\r\n\r\nfunction getFileContentDirectory(fs, dir, fileName)\r\n{\r\n\r\n\tlet sourceString = fs.readFileSync(dir + fileName).toString(),\r\n\t\t\tfileContentObject = {};\r\n\tsourceString.split(/\\n/)\r\n\t\t\t.filter(function (item) {\r\n\t\t\t\treturn item.trim().split('=').length > 1;\r\n\t\t\t})\r\n\t\t\t.forEach(function (value) {\r\n\t\t\t\tlet line = value.trim().split('=');\r\n\t\t\t\tfileContentObject[line[0]] = (line.length === 2 ? line[1] : value.trim().slice(line[0].length + 1));\r\n\t\t\t});\r\n\treturn fileContentObject;\r\n}\r\n\r\nfunction writeDataToFile(fs, dir, fileName, data)\r\n{\r\n\tfs.writeFile(dir + fileName, data, function (err) {\r\n\t\tif (err)\r\n\t\t{\r\n\t\t\tconsole.log('Write File failed!');\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tconsole.log(dir + fileName + \" stored ok!\");\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction getDirectoryList(path)\r\n{\r\n\tlet dirContent = {dirNames: [], fileNames: []};\r\n\tfs.readdirSync(path)\r\n\t\t\t.forEach(function (dirItem) {\r\n\t\t\t\tif (fs.statSync(path + \"/\" + dirItem).isDirectory())\r\n\t\t\t\t{\r\n\t\t\t\t\tdirContent.dirNames[dirContent.dirNames.length] = dirItem;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tdirContent.fileNames[dirContent.fileNames.length] = dirItem;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\treturn dirContent;\r\n}"]}